import os
import json

# 설정
# 스캔할 루트 폴더를 public으로 지정합니다.
ROOT_FOLDER = "public"
ICON_EXTENSIONS = [".png", ".svg", ".ico", ".jpg", ".jpeg"]
# 생성될 파일의 경로를 src/data/ 로 지정합니다.
OUTPUT_FILE = "src/data/iconData.ts"

def scan_icons(root_path):
    """폴더를 재귀적으로 스캔하여 아이콘 파일 찾기"""
    icon_data = {}
    
    # 절대 경로로 변환
    abs_root_path = os.path.abspath(root_path)
    
    for dirpath, dirnames, filenames in os.walk(abs_root_path):
        # 현재 디렉토리의 상대 경로 계산
        relative_dirpath = os.path.relpath(dirpath, abs_root_path)
        # 경로 구분자를 슬래시로 통일
        relative_dirpath = relative_dirpath.replace(os.sep, "/")
        
        if relative_dirpath == ".":
            relative_dirpath = ""

        icons_in_folder = []
        
        for filename in filenames:
            # 아이콘 확장자 체크
            if any(filename.lower().endswith(ext) for ext in ICON_EXTENSIONS):
                
                # 파일의 상대 경로 생성
                relative_file_path = os.path.join(relative_dirpath, filename)
                relative_file_path = "/" + relative_file_path.replace(os.sep, "/")

                icons_in_folder.append({
                    "name": filename,
                    "path": relative_file_path
                })
        
        # 아이콘이 있는 폴더만 추가
        if icons_in_folder:
            folder_key = relative_dirpath
            if folder_key:
                icon_data[folder_key] = icons_in_folder
    
    return icon_data

def generate_typescript_file(icon_data, output_path):
    """TypeScript 파일 생성"""
    json_str = json.dumps(icon_data, indent=2, ensure_ascii=False)
    
    ts_template = '''// Auto-generated by scan.py
// 이 파일을 수동으로 편집하지 마세요

export interface IconItem {
  name: string;
  path: string;
}

export interface IconData {
  [folderPath: string]: IconItem[];
}

export const iconData: IconData = '''

    ts_content = ts_template + json_str + ';'
    
    # 출력 디렉토리 생성
    output_dir = os.path.dirname(output_path)
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    with open(output_path, 'w', encoding='utf-8') as f:
        f.write(ts_content)
    
    print(f"✅ Generated {output_path}")
    print(f"📊 Found {len(icon_data)} folders with icons")
    total_icons = sum(len(icons) for icons in icon_data.values())
    print(f"🎨 Total icons: {total_icons}")

if __name__ == "__main__":
    print(f"🔍 Scanning {os.path.abspath(ROOT_FOLDER)}...")
    data = scan_icons(ROOT_FOLDER)
    generate_typescript_file(data, OUTPUT_FILE)
    print("✨ Done!")